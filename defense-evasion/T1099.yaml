# Playbook-T1099
- name :  Timestomp - Linux
  hosts: linux
  vars_files:
   - /opt/ansible/vars.yaml
  tasks:
          - name: Set a file's access and modify timestamp
            tags: always
            shell: |
              mkdir {{victim_folder }}
              touch -am -t 197001010000.00 {{victim_folder }}/{{ victim_file }}
          - name: check file access time
            tags: always
            shell: |
             ls -l {{victim_folder }}/{{ victim_file }} --time=atime
            register: T1099
          - name: check if playbook was blocked
            tags: always
            debug: msg="Playbook Completed#T1099#blocked#linux#"
            when:  '"1970" not in T1099.stdout'       
          - name: check if playbook was successfull
            tags: always
            debug: msg="Playbook Completed#T1099#passed#linux#"
            when: '"1970" in T1099.stdout' 

          - name: cleanup      
            tags: always
            shell: |
              rm -r {{victim_folder }}

- name :  Timestomp - Windows
  hosts: windows
  vars_files:
   - /opt/ansible/vars.yaml
  tasks:
          - name: Touch a file (creates if not present, updates modification time if present)
            tags: always
            win_file:
              path: c:\temp\{{ victim_file }}
              state: touch
          - name: Set a file's access and modify timestamp
            tags: always
            win_shell: |
              (Get-Item c:\temp\{{ victim_file }}).LastAccessTime=$(Get-Date "01/01/1970 06:00 am")
              (Get-Item c:\temp\{{ victim_file }}).LastWriteTime=$(Get-Date "01/01/1970 06:00 am")
          - name: check file access time
            tags: always
            win_shell: |
             (Get-Item c:\temp\{{ victim_file }}).LastAccessTime
            register: T1099
          - name: check if playbook was blocked
            tags: always
            debug: msg="Playbook Completed#T1099#blocked#win#"
            when:  '"1970" not in T1099.stdout'       
          - name: check if playbook was successfull
            tags: always
            debug: msg="Playbook Completed#T1099#passed#win#"
            when: '"1970" in T1099.stdout' 
            
          - name: cleanup      
            tags: always
            win_file:
              path: c:\temp\{{ victim_file }}
              state: absent
    
            
